# Database Configuration
# For Local Development (without Docker)
DATABASE_URL="postgresql://shiptrack:shiptrack_password@localhost:5432/shiptrack_dev"

# For Docker Development
# DATABASE_URL="postgresql://shiptrack:shiptrack_password@postgres-dev:5432/shiptrack_dev"

# For Docker Production  
# DATABASE_URL="postgresql://shiptrack:shiptrack_password@postgres-prod:5432/shiptrack_prod"

# JWT Configuration
JWT_SECRET="your-super-secret-jwt-key-change-this-in-production"

# NextAuth Configuration (for future use)
NEXTAUTH_SECRET="your-nextauth-secret"
NEXTAUTH_URL="http://localhost:3000"

# =============================================================================
# CARRIER API INTEGRATIONS
# =============================================================================

# FedEx API Configuration
# Get free API access at: https://developer.fedex.com/
# 1. Create a FedEx developer account
# 2. Create a new application
# 3. Get your Client ID and Client Secret
# 4. Use sandbox environment for testing
FEDEX_CLIENT_ID="your-fedex-client-id"
FEDEX_CLIENT_SECRET="your-fedex-client-secret"
# Note: FedEx API Key is not needed for OAuth flow, only Client ID and Secret

# USPS API Configuration
# Get free API access at: https://www.usps.com/business/web-tools-apis/
# 1. Register for a USPS Web Tools account
# 2. Get your User ID (no password required for tracking API)
# 3. Use production endpoint (no sandbox available)
USPS_WEB_TOOLS_USER_ID="your-usps-web-tools-user-id"

# UPS API Configuration
# Get free API access at: https://www.ups.com/developers
# 1. Create a UPS developer account
# 2. Create a new application
# 3. Get your Client ID and Client Secret
# 4. Use production environment for real tracking
UPS_CLIENT_ID="your-ups-client-id"
UPS_CLIENT_SECRET="your-ups-client-secret" 